{"version":3,"sources":["components/LifeBar/LifeBar.jsx","components/Monster/Monster.jsx","skull.svg","components/MonsterList/MonsterList.jsx","components/MonsterForm/MonsterForm.jsx","containers/MonsterListContainer/MonsterListContainer.jsx","App.jsx","serviceWorker.js","index.js"],"names":["progressStyle","percent","LifeBar","_ref","react_default","a","createElement","es","strokeWidth","trailColor","strokeColor","Monster","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","takeDamage","damage","hitPointsLeft","state","hp","setState","restoreLife","restore","restored","Number","onInputChange","event","defineProperty","target","name","value","totalHp","_this2","_this$props","position","_this$state","className","concat","onClick","type","aria-label","placeholder","onChange","React","PureComponent","_extends","assign","i","arguments","length","source","key","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","fill","_ref3","_ref4","_ref5","skull_SvgSkull","svgRef","viewBox","ref","ForwardRef","forwardRef","MonsterList","__webpack_require__","p","monsters","onRemove","map","monster","index","id","components_Monster_Monster","MonsterForm","onAddMonster","tabIndex","autoFocus","MonstersListContainer","addMonster","toConsumableArray","objectSpread","nanoid","removeMonster","filter","components_MonsterForm_MonsterForm","App","Fragment","MonsterListContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.914dd599.chunk.js","sourcesContent":["import React from 'react'\nimport { Line } from 'rc-progress'\n\nconst progressStyle = percent => {\n  if (percent >= 75) return '#31cb00'\n  if (percent < 75 && percent >= 30) return '#e6d506'\n  return '#f70304'\n}\n\nexport default ({ percent }) => (\n  <Line\n    percent={percent}\n    strokeWidth=\"4\"\n    trailColor=\"#fff\"\n    strokeColor={progressStyle(percent)}\n  />\n)\n","import React from 'react'\nimport LifeBar from '../LifeBar/LifeBar'\nimport './monster.css'\n\nclass Monster extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      hp: this.props.totalHp,\n      damage: '',\n      restore: '',\n    }\n  }\n\n  takeDamage = damage => {\n    const { hp } = this.state\n    const hitPointsLeft = hp - damage\n    this.setState({ hp: hitPointsLeft, damage: '' })\n  }\n\n  restoreLife = restore => {\n    const { hp } = this.state\n    const restored = Number(hp) + Number(restore)\n    this.setState({ hp: restored, restore: '' })\n  }\n\n  onInputChange = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  render() {\n    const { name, position, totalHp } = this.props\n    const { hp, damage, restore } = this.state\n    const percent = (hp * totalHp) / 100\n    return (\n      <div className=\"monster\">\n        <p className=\"monster__name\">{`${name} ${position}`}</p>\n        <div className=\"monster__lifebar-container\">\n          <LifeBar percent={percent} />{' '}\n          <span className=\"monster__hp\">{hp}</span>\n        </div>\n        <div className=\"monster__hp-buttons\">\n          <button\n            className=\"btn__hp-handler btn__hp-handler--minus\"\n            onClick={() => this.takeDamage(1)}\n          >\n            -1\n          </button>\n          <button\n            className=\"btn__hp-handler btn__hp-handler--plus\"\n            onClick={() => this.restoreLife(1)}\n          >\n            +1\n          </button>\n        </div>\n        <div className=\"monster__life-handler\">\n          <input\n            type=\"number\"\n            aria-label=\"damage\"\n            name=\"damage\"\n            placeholder=\"How much damage\"\n            value={damage}\n            onChange={this.onInputChange}\n            className=\"monster__input-damage\"\n          />\n          <button\n            className=\"btn__hp-damage\"\n            onClick={() => this.takeDamage(damage)}\n          >\n            Damage\n          </button>\n        </div>\n        <div className=\"monster__life-handler\">\n          <input\n            type=\"number\"\n            name=\"restore\"\n            placeholder=\"How much to restore\"\n            value={restore}\n            onChange={this.onInputChange}\n            className=\"monster__input-restore\"\n          />\n          <button\n            className=\"btn__hp-restore\"\n            onClick={() => this.restoreLife(restore)}\n          >\n            Restore\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Monster\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M151 7C71 7 7 71 7 150v117c0 19 15 33 33 33h36v74c0 8 6 15 15 15h120c8 0 15-7 15-15v-74h35c18 0 33-14 33-33V150C294 71 230 7 151 7\",\n  fill: \"#999\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M151 7V0C68 0 0 67 0 150v117c0 22 18 40 40 40h29v67c0 12 10 22 22 22h120c12 0 22-10 22-22v-67h28c22 0 40-18 40-40V150C301 67 234 0 151 0v14a136 136 0 0 1 136 136v117a26 26 0 0 1-26 27h-35a7 7 0 0 0-7 6v74c0 5-4 8-8 8H91c-5 0-9-3-9-8v-74a7 7 0 0 0-6-6H40a26 26 0 0 1-26-27V150A136 136 0 0 1 151 14z\",\n  fill: \"#54596e\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M151 14A136 136 0 0 0 14 150v25a143 143 0 0 1 273 0v-25A136 136 0 0 0 151 14\",\n  fill: \"#8b8c90\"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"#54596e\"\n}, React.createElement(\"path\", {\n  d: \"M151 7C71 7 7 71 7 150v68c0-15 3-30 7-43v-25a136 136 0 0 1 233-96c25 24 40 58 40 96v25c5 13 7 28 7 43v-68C294 71 230 7 151 7\"\n}), React.createElement(\"path\", {\n  d: \"M274 242c0-23-30-52-53-52s-40 18-40 40 18 41 40 41 53-7 53-29zm0 0M31 242c0-23 29-52 52-52s40 18 40 40c0 23-18 41-40 41s-52-7-52-29zm0 0M103 369v20a7 7 0 1 0 14 0v-20a7 7 0 0 0-14 0M130 369v20a7 7 0 0 0 14 0v-20a7 7 0 1 0-14 0M157 369v20a7 7 0 1 0 14 0v-20a7 7 0 0 0-14 0M185 369v20a7 7 0 0 0 13 0v-20a7 7 0 1 0-13 0M147 265l-19 29c-2 3 0 6 3 6h39c3 0 5-3 4-6l-20-29c-1-3-5-3-7 0zm0 0\"\n}));\n\nvar SvgSkull = function SvgSkull(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"-47 0 395 396\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgSkull, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/skull.6ce7f2ec.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport Monster from '../../components/Monster/Monster'\nimport { ReactComponent as RipIcon } from '../../skull.svg'\n\nexport default ({ monsters, onRemove }) =>\n  monsters.map((monster, index) => (\n    <section className=\"monster-list card\" key={monster.id}>\n      <button\n        aria-label={`remove ${monster.name} ${index + 1}`}\n        type=\"button\"\n        onClick={() => onRemove(monster.id)}\n        className=\"btn__remove-monster\"\n      >\n        <RipIcon />\n      </button>\n      <Monster {...monster} position={index + 1} />\n    </section>\n  ))\n","import React from 'react'\n\nclass MonsterForm extends React.PureComponent {\n  constructor() {\n    super()\n    this.state = {}\n  }\n\n  onInputChange = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  render() {\n    const { onAddMonster } = this.props\n    return (\n      <form className=\"card\">\n        <input\n          type=\"text\"\n          aria-label=\"monster name\"\n          placeholder=\"name\"\n          name=\"name\"\n          onChange={this.onInputChange}\n          tabIndex=\"0\"\n          autoFocus\n        />\n        <input\n          type=\"number\"\n          aria-label=\"monster hp\"\n          placeholder=\"hp\"\n          name=\"totalHp\"\n          onChange={this.onInputChange}\n        />\n        <button\n          className=\"btn\"\n          type=\"button\"\n          onClick={() => onAddMonster(this.state)}\n        >\n          Add\n        </button>\n      </form>\n    )\n  }\n}\n\nexport default MonsterForm\n","import React from 'react'\nimport MonsterList from '../../components/MonsterList/MonsterList'\nimport MonsterForm from '../../components/MonsterForm/MonsterForm'\nimport nanoid from 'nanoid'\nimport './monsterListContainer.css'\n\nclass MonstersListContainer extends React.PureComponent {\n  constructor() {\n    super()\n\n    this.state = {\n      monsters: [],\n    }\n  }\n\n  addMonster = monster => {\n    const { monsters } = this.state\n    this.setState({\n      monsters: [...monsters, { id: nanoid(), ...monster }],\n    })\n  }\n\n  removeMonster = id => {\n    const { monsters } = this.state\n    this.setState({\n      monsters: monsters.filter(monster => monster.id !== id),\n    })\n  }\n\n  render() {\n    const { monsters } = this.state\n    return (\n      <div className=\"monster-list-container\">\n        <MonsterForm onAddMonster={this.addMonster} />\n        <MonsterList monsters={monsters} onRemove={this.removeMonster} />\n      </div>\n    )\n  }\n}\n\nexport default MonstersListContainer\n","import React from 'react'\nimport MonsterListContainer from './containers/MonsterListContainer/MonsterListContainer'\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <header>\n        <h1 className=\"title\">Monster Manager</h1>\n      </header>\n      <MonsterListContainer />\n    </React.Fragment>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}